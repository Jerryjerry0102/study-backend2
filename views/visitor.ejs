<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <!-- axios cdn -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.27.2/axios.min.js" integrity="sha512-odNmoc1XJy5x1TMVMdC7EMs3IVdItLPlCeL5vSUPN2llYKMJ2eByTTAIiiuqLg+GdNr9hF6z81p27DArRFKT7A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- jquery -->
    <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous"></script> 

    <style>
        .d-none{
            display: none;
        }
    </style>
</head>
<body>
    <form id="form_register">
        <fieldset style="display: inline-block;">
            <legend>방명록 등록</legend>
            <input type="hidden" name="id">
            <!-- 새로운 개념 -->
            <!-- id를 저장하기 위해 만든 것 -->
            이름 : <input type="text" name="name" placeholder="사용자 이름"><br>
            방명록 : <input type="text" name="comment" placeholder="방명록"><br>

            <div class="d-none" id="updateBtn">
                <button type="button" onclick="update_visitor();">수정</button>
                <button type="button" onclick="update_cancel();">취소</button>
            </div>

            <button id="registerBtn" type="button" onclick="register();">등록</button>
        </fieldset>
    </form>
    <table cellspacing="0" cellpadding="10" style="margin-top: 30px;">
        <tr>
            <th>ID</th>
            <th>작성자</th>
            <th>방명록</th>
            <th>수정</th>
            <th>삭제</th>
        </tr>
    <% for( let i = 0; i < data.length; i++){ %>
        <tr>
            <td><%=data[i].id%></td>
            <td><%=data[i].name%></td>
            <td><%=data[i].comment%></td>
            <td><button type="button" onclick="load_update('<%=data[i].id%>', this)">수정</button></td>
            <td><button type="button" onclick="delete_visitor('<%=data[i].id%>', this);">삭제</button></td>
        </tr>
    <% } %>
    </table>
    <script>
        function register(){
            var form = document.getElementById("form_register");
            var data1 = {
                name: form.name.value,
                comment: form.comment.value
            }

            axios({
                url: "/visitor/post",
                method: "post",
                data: data1
                // cleint가 요청할 때 이러면 이게 req.body에 들어감
            }).then((response) => {
                console.log(response.data);
                $("table").append(`
                <tr>
                    <td>${response.data.id}</td>
                    <td>${response.data.name}</td>
                    <td>${response.data.comment}</td>
                    <td><button type="button">수정</button></td>
                    <td><button type="button">삭제</button></td>
                </tr>
                `)
                // 서버에서 res.send(data)로 보내준 값을 쓰는 중
            })
        }

        function delete_visitor(id, obj){
            axios({
                url: "/visitor/delete",
                method: "post",
                data: {id: id}
                // cleint가 요청할 때 이러면 이게 req.body에 들어감
            }).then((response) => {
                console.log(response.data);                
                // 서버에서 res.send(data)로 보내준 값을 쓰는 중
                obj.parentElement.parentElement.remove();
                // 부모태그가 선택됨
            })
        }

        function update_cancel(){
            var form = document.getElementById("form_register")
            form.reset();
            $("#updateBtn").addClass("d-none");
            $("#registerBtn").removeClass("d-none");
        }

        var update_tr;

        function load_update(id, obj){
            axios({
                url: "/visitor/get",
                method: "post",
                data: {id: id}
                // cleint가 요청할 때 이러면 이게 req.body에 들어감
            }).then((response) => {
                console.log(response.data);                
                // 서버에서 res.send(data)로 보내준 값을 쓰는 중
                var form = document.getElementById("form_register")
                form.name.value = response.data.name;
                form.comment.value = response.data.comment;
                // input hidden id 부분
                // 사용자에게는 안 보이지만 input에 id가 담김
                form.id.value = response.data.id;
                // 
                update_tr = obj.parentElement.parentElement;
                $("#updateBtn").removeClass("d-none");
                $("#registerBtn").addClass("d-none");
            })
        }

        function update_visitor(){
            var form = document.getElementById("form_register")
            var data = {
                id: form.id.value,
                // 위에서 input hidden에 id값을 담아놨기 때문에 가능
                name: form.name.value,
                comment: form.comment.value
            }
            axios({
                url: "/visitor/update",
                method: "post",
                data: data
                // cleint가 요청할 때 이러면 이게 req.body에 들어감
            }).then((response) => {
                console.log(response.data);   
                update_cancel();           
                // 서버에서 res.send(data)로 보내준 값을 쓰는 중
                update_tr.children[1].innerText = response.data.name;
                update_tr.children[2].innerText = response.data.comment;
            })
        }
    </script>
</body>
</html>