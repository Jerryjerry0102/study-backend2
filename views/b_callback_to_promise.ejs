<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        // <Callback Hell example>
        class UserStorage {
            loginUser(id, password){
                return new Promise((resolve, reject) => {
                    setTimeout(() => {
                        if(
                            (id === 'ellie' && password === 'dream') ||
                            (id === 'coder' && password === 'academy')
                        ) {
                            resolve(id);
                        } else {
                            reject(new Error('not found'));
                        }
                    }, 2000);
                })
            }

            getRoles(user){
                return new Promise((resolve, reject) => {
                    setTimeout(() => {
                        if(user === 'ellie'){
                            resolve({ name: 'ellie', role: 'admin'});
                        } else {
                            reject(new Error('no access'));
                        }
                    }, 1000);
                });
            }
        }

        const userStorage = new UserStorage();
        const id = prompt('enter your id');
        const password = prompt('enter your password');

        // callback지옥
        // userStorage.loginUser(id, password, (user) => {
        //     userStorage.getRoles(user, (userWithRole) => {
        //         alert(`Hello ${userWithRole.name}, you have a ${userWithRole.role} role`);
        //     }, (error) => {console.log(error);
        //     })
        // }, (error) => { console.log(error);
        // })


        // promise chaining
        userStorage.loginUser(id, password)
        .then((user) => {
            return userStorage.getRoles(user)
        })
        .then((userWithRole) => {
            alert(`Hello ${userWithRole.name}, you have a ${userWithRole.role} role`);
        })
        .catch((error) => {console.log(error);})


        // 축약형
        userStorage.loginUser(id, password)
        .then(userStorage.getRoles)
        .then(userWithRole => alert(`Hello ${userWithRole.name}, you have a ${userWithRole.role} role`))
        .catch(console.log)
    </script>
</body>
</html>